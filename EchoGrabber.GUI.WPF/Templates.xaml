<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:eg="clr-namespace:EchoGrabber;assembly=eglib"
                    xmlns:vm="clr-namespace:EchoGrabber.GUI.WPF.ViewModel">

    <Style x:Key="PathButtonStyle"
           TargetType="Button">
        <Setter Property="Template"
                Value="{DynamicResource PathButtonTemplate}" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>

    <ControlTemplate x:Key="PathButtonTemplate"
                     TargetType="Button">
        <Ellipse Width="{TemplateBinding Width}"
                 Height="{TemplateBinding Height}"
                 Fill="{TemplateBinding Background}"
                 Stroke="{TemplateBinding BorderBrush}" />
    </ControlTemplate>

    <DataTemplate x:Key="PodcastItemTemplateNew">
        <ListViewItem Template="{DynamicResource MouseOverItemTemplateNew}" />
    </DataTemplate>

    <ControlTemplate x:Key="MouseOverItemTemplateNew"
                     TargetType="ListViewItem">
        <StackPanel HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Button Background="Red"
                    Style="{StaticResource PathButtonStyle}" />
            <Button Background="Yellow"
                    Template="{StaticResource PathButtonStyle}" />
            <Button Background="Green"
                    Template="{StaticResource PathButtonStyle}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:s="clr-namespace:System;assembly=mscorlib"
                     x:Key="ProgressBarTemplate"
                     TargetType="ProgressBar">
        <Grid Name="TemplateRoot">
            <Border Background="{TemplateBinding Panel.Background}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    BorderThickness="{TemplateBinding Border.BorderThickness}" />
            <Rectangle Name="PART_Track" />
            <Grid Name="PART_Indicator"
                  HorizontalAlignment="Left"
                  ClipToBounds="True">
                <Rectangle Name="Indicator"
                           Fill="{TemplateBinding TextElement.Foreground}" />
                <Rectangle Name="Animation"
                           Fill="{TemplateBinding TextElement.Foreground}"
                           RenderTransformOrigin="0.5,0.5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <TransformGroup.Children>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup.Children>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates" />
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation">
                <Setter TargetName="TemplateRoot"
                        Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="Orientation.Vertical" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate">
                <Setter TargetName="Indicator"
                        Property="UIElement.Visibility">
                    <Setter.Value>
                        <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MouseOverItemTemplate"
                     TargetType="ListViewItem">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Label Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="3"
                   Padding="0,5"
                   Content="{Binding Title}" />
            <Button Grid.Row="1"
                    Grid.Column="0"
                    Command="{DynamicResource ShowPodcastsCommandReference}"
                    CommandParameter="{Binding}"
                    Content="{DynamicResource LinksOnOnePage}"
                    Style="{DynamicResource HyperlinkLikeButton}"
                    ToolTip="{DynamicResource LinksOnOnePageTooltip}" />
            <Button Grid.Row="1"
                    Grid.Column="1"
                    Command="{DynamicResource CreatePlaylistCommandReference}"
                    CommandParameter="{Binding}"
                    Content="{DynamicResource CreatePlaylist}"
                    Style="{DynamicResource HyperlinkLikeButton}"
                    ToolTip="{DynamicResource CreatePlaylistTooltip}" />
            <Button Grid.Row="1"
                    Grid.Column="2"
                    Command="{DynamicResource DownloadCommandReference}"
                    CommandParameter="{Binding}"
                    Content="{DynamicResource DownloadAll}"
                    Style="{DynamicResource HyperlinkLikeButton}"
                    ToolTip="{DynamicResource DownloadAllTooltip}"
                    Visibility="Hidden" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="NormalItemTemplate"
                     TargetType="ListViewItem">
        <Label Padding="0,5"
               Content="{Binding}" />
    </ControlTemplate>

    <DataTemplate x:Key="PodcastItemTemplate"
                  DataType="{x:Type eg:PodcastInfo}">
        <ListViewItem>
            <ListViewItem.Style>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Template"
                                    Value="{StaticResource MouseOverItemTemplate}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Template"
                            Value="{StaticResource NormalItemTemplate}" />
                </Style>
            </ListViewItem.Style>
        </ListViewItem>
    </DataTemplate>

    <ControlTemplate x:Key="RadioButtonTemplate"
                     TargetType="ToggleButton">
        <TextBlock x:Name="innerText"
                   Cursor="Hand"
                   Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}">
            <ContentPresenter />
        </TextBlock>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">
                <Setter TargetName="innerText"
                        Property="TextDecorations"
                        Value="Underline" />
                <Setter TargetName="innerText"
                        Property="FontWeight"
                        Value="Bold" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HyperlinkLikeButtonTemplate"
                     TargetType="{x:Type Button}">
        <TextBlock x:Name="innerText"
                   Cursor="Hand"
                   Foreground="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}">
            <ContentPresenter />
        </TextBlock>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver"
                     Value="true">
                <Setter TargetName="innerText"
                        Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter TargetName="innerText"
                        Property="TextDecorations"
                        Value="Underline" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ComboBox  -->
    <!--  Flat ComboBox  -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush"
                     Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush"
                     Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush"
                     Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush"
                     Color="#888" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate"
                     TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                    BorderThickness="1,1,1,1"
                    CornerRadius="0" />
            <Border Name="ButtonBorder"
                    Grid.Column="1"
                    Margin="1,1,1,1"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="#444"
                    BorderThickness="0,0,0,0"
                    CornerRadius="0, 0, 0, 0" />

            <Path Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  Fill="#444" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver"
                     Value="True">
                <Setter TargetName="ButtonBorder"
                        Property="Panel.Background"
                        Value="WhiteSmoke" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked"
                     Value="True">
                <Setter TargetName="ButtonBorder"
                        Property="Panel.Background"
                        Value="WhiteSmoke" />
                <Setter TargetName="Arrow"
                        Property="Shape.Fill"
                        Value="#FF8D979E" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Panel.Background"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder"
                        Property="Panel.Background"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder"
                        Property="Border.BorderBrush"
                        Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                <Setter Property="TextElement.Foreground"
                        Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                <Setter TargetName="Arrow"
                        Property="Shape.Fill"
                        Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels"
                Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="TextElement.Foreground"
                Value="Black" />
        <Setter Property="FrameworkElement.FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter Name="ContentSite"
                                          Margin="5,0,23,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />
                        <TextBox Name="PART_EditableTextBox"
                                 Margin="3,0,23,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost"
                                            Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!--  Popup showing items  -->
                        <Popup Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border Name="DropDownBorder"
                                        Margin="0,1,0,0"
                                        Background="White"
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="0" />
                                <ScrollViewer Margin="4"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems"
                                 Value="False">
                            <Setter TargetName="DropDownBorder"
                                    Property="FrameworkElement.MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping"
                                 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable"
                                 Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop"
                                    Value="False" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="UIElement.Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="UIElement.Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End of Flat ComboBox  -->
</ResourceDictionary>